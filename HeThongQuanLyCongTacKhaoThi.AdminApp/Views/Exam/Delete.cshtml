@model HeThongQuanLyCongTacKhaoThi.ViewModels.Catalog.Exams.ExamViewModel

@{
    ViewData["Title"] = "Xoá đề thi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Xoá đề thi</h1>
<h3>Bạn có chắc chắn muốn xoá đề thi này?</h3>

<div>
    <h4>Thông tin đề thi sẽ xoá</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SubjectID)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SubjectID)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MultipleChoiceQuestionCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MultipleChoiceQuestionCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EssayQuestionCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EssayQuestionCount)
        </dd>
    </dl>
    <h4>Chi tiết các câu hỏi trong đề thi</h4>
    <dl class="row">
        @for (int i = 0; i < Model.ExamDetails.Count; i++)
        {
            <dt class="col-12">
                <hr>
                <h3 class="text-bold h4 text-gray-700">Câu @(i+1)</h3>
                <hr>
            </dt>
            var question = Model.ExamDetails[i].Question;

            @await Html.PartialAsync("_QuestionDetail", question);
        }
    </dl>

    <form asp-action="Delete">
        <input type="submit" value="Xoá" class="btn btn-danger" /> |
        <a class="btn btn-outline-primary" asp-action="Index">Quay lại danh sách đề thi</a>
    </form>
</div>

@section Scripts{
    <script src="/assets/vendor/ckeditor5/build/ckeditor.js"></script>

    <script>
        $(document).ready(function () {

            var addEditor = function (className) {
                window.editors = {};

                document.querySelectorAll(className).forEach((node, index) => {
                    ClassicEditor
                        .create(node, {})
                        .then(newEditor => {
                            window.editors[index] = newEditor;
                            newEditor.isReadOnly = true;
                        })
                        .catch(error => {
                            console.error('Oops, something went wrong!');
                            console.error('Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:');
                            console.warn('Build id: 5eukpjx8rsb5-h2d357uhcalr');
                            console.error(error);
                        });
                });

            }

            addEditor('.content');
            addEditor('.editor');
        });
    </script>

}