// <auto-generated />
using HeThongQuanLyCongTacKhaoThi.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HeThongQuanLyCongTacKhaoThi.Data.Migrations
{
    [DbContext(typeof(HeThongQuanLyCongTacKhaoThiDbContext))]
    [Migration("20201106092608_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("ANSWER");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<int>("StudentCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("CLASS");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.HasKey("ID");

                    b.ToTable("EXAM");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.ExamDetail", b =>
                {
                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("ExamID", "QuestionID");

                    b.HasIndex("QuestionID");

                    b.ToTable("EXAM_DETAIL");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.Property<bool>("IsMultipleChoice")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SubjectID");

                    b.ToTable("QUESTION");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Result", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<int>("ScoreID")
                        .HasColumnType("int");

                    b.Property<int>("StudentAnswerID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.HasIndex("ScoreID");

                    b.HasIndex("StudentAnswerID");

                    b.HasIndex("SubjectID");

                    b.ToTable("RESULT");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Score", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.HasKey("ID");

                    b.ToTable("SCORE");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.ToTable("STUDENT_ANSWER");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswerDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerID")
                        .HasColumnType("int");

                    b.Property<string>("EssayPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("StudentAnswerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("StudentAnswerID");

                    b.ToTable("STUDENT_ANSWER_DETAIL");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AssiduousScorePercent")
                        .HasColumnType("real");

                    b.Property<int>("CreditCount")
                        .HasColumnType("int");

                    b.Property<float>("FinalScorePercent")
                        .HasColumnType("real");

                    b.Property<float>("FrequentScorePercent")
                        .HasColumnType("real");

                    b.Property<float>("MiddleScorePercent")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .IsUnicode(true);

                    b.HasKey("ID");

                    b.ToTable("SUBJECT");
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Answer", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.ExamDetail", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Exam", "Exam")
                        .WithMany("ExamDetails")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Question", "Question")
                        .WithMany("ExamDetails")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Question", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.Result", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Exam", "Exam")
                        .WithMany("Results")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Score", "Score")
                        .WithMany("Results")
                        .HasForeignKey("ScoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswer", "StudentAnswer")
                        .WithMany("Results")
                        .HasForeignKey("StudentAnswerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Subject", "Subject")
                        .WithMany("Results")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswer", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Exam", "Exam")
                        .WithMany("StudentAnswers")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswerDetail", b =>
                {
                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Answer", "Answer")
                        .WithMany("StudentAnswerDetails")
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.Question", "Question")
                        .WithMany("StudentAnswerDetails")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HeThongQuanLyCongTacKhaoThi.Data.Entities.StudentAnswer", "StudentAnswer")
                        .WithMany("StudentAnswerDetails")
                        .HasForeignKey("StudentAnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
